/**
 * Автоматическое расположение узлов графа на диаграмме по алгоритму Kamada-Kawai. [1] Kamada T.,
 * Kawai S. An Algorithm for Drawing General Undirected Graphs / Information Processing Letters 31
 * (1989), p. 7 - 15.
 *
 * В графе не должно быть узлов с одинаковыми координатами.
 */

function KamadaKawaiLayout(){

    // Область, которая содержит декартовы координаты
    // Ширина области, на которой будут отображаться узлы
    // Высота области, на которой будут отображаться узлы
        var cartesianRectangleArea;

    // Точность
    var EPSILON = 1e-15;

    // Максимальное количество итераций
    var MAX_ITERATIONS = 10000;

    // Минимальное расстояние между узлами (в некоторых единицах измерения), которые соединены ребром
    var minEdgeNodesDistance;

    // Минимальное расстояние между узлами (в некоторых единицах измерения), которые не соединены ребром
    var minNodesDistance;

    // Множитель (> 1) для диаметра графа, который используется для вычисления расстояния между не
    // связанными ребром узлами
    // TODO Rename it
    var disconnectedFactor = 5.0;

        // Множитель (0;1), который позволяет побирать требую длину ребра между узлами.
    // TODO Rename it
    var lengthFactor = 0.7;

    // Матрица расстояний
    var distances;

    // Матрица желаемых расстояний
    var length;

    // Матрица "коэффициентов жесткости" для "пружин"
    var stiffness;

    // Желаемая длина ребра на графе
    var desiredEdgeLength;

    // Константа (> 0) для регулирования "жесткости" пружины
    var springStiffness ;

    // Для оптимизации
    var maxDeltaM;
    var indexForMaxDeltaM;


}


